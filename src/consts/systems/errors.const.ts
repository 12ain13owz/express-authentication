export const ERRORS = {
  AUTH: {
    INVALID_CREDENTIALS: 'Invalid credentials provided',
    ACCOUNT_LOCKED: 'Account is temporarily locked due to multiple failed attempts',
    SESSION_EXPIRED: 'User session has expired',
    ACCOUNT_NOT_VERIFIED: 'Account is not verified',
    UNAUTHORIZED_ACCESS: 'Unauthorized access',
  },
  PASSWORD: {
    MIN_LENGTH: 'Password must be at least 8 characters long',
    UPPERCASE: 'Password must contain at least one uppercase letter',
    LOWERCASE: 'Password must contain at least one lowercase letter',
    NUMBER: 'Password must contain at least one number',
    SPECIAL_CHAR: 'Password must contain at least one special character',
    NOT_MATCH: 'Passwords do not match',
    RESET_EXPIRED: 'Password reset link is expired',
  },
  EMAIL: {
    ALREADY_IN_USE: 'Email is already in use',
    PASSWORD_INVALID: 'Email or password is invalid',
    ALREADY_VERIFIED: 'Email is already verified',
    VERIFICATION_EXPIRED: 'Email verification link is expired',
  },
  TOKEN: {
    EXPIRED: 'Token is expired',
    INVALID_SIGNATURE: 'Token is invalid signature',
    NOT_FOUND_REVOKED: 'Token not found or revoked',
    VERIFICATION_FAILED: 'Token verification failed',
  },
  SYSTEM: {
    VALIDATION_ERROR: 'An unexpected error occurred during request validation',
    BAD_REQUEST: 'Bad request',
    UNAUTHORIZED: 'Unauthorized',
    FORBIDDEN: 'Forbidden',
    NOT_FOUND: 'Not found',
    INTERNAL_SERVER_ERROR: 'Internal server error',
    METHOD_NOT_ALLOWED: 'Method not allowed',
    TOO_MANY_REQUESTS: 'Too many requests. Please try again later',
    BAD_GATEWAY: 'Bad gateway',
    UNSPECIFIED_FUNCTION: 'Unspecified function',
  },
  UTIL: {
    notFound: (item: string) => `${item} not found`,
    alreadyExists: (item: string) => `${item} already exists`,
    invalidField: (field: string) => `Invalid ${field} format`,
    invalidType: (field: string, type: string) => `${field} must be of type ${type}`,
    requiredField: (field: string) => `${field} is required`,
    failedAction: (action?: string, target?: string) => `Failed to ${action} ${target}`,
  },
}
